services:
  traefik:
    image: "traefik:v3.0"
    command:
      #  - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - mfe-network
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  registery:
    image: kprasad99/service-discoery:1.0.0-alpha.1
    privileged: true
    user: "0"
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
    # no env to enable h2c, h2c is not supported by fasthttp.
    #  - "traefik.http.services.registery.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.registery.loadbalancer.server.port=8080"
      - "traefik.http.routers.registery.rule=PathPrefix(`/registery`)"
    environment:
      WEB_CONTEXT_PATH: "/registery"
    networks:
      - mfe-network
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:z"
  app1:
    image: kprasad99/app1:1.0.0-alpha.1
    build:
      context: ./app1
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
    # no env to enable h2c, need to manually add nginx.conf with h2c enabled.
    #  - "traefik.http.services.app1.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.app1.loadbalancer.server.port=80"
      - "traefik.http.routers.app1.rule=PathPrefix(`/app1`)"
      - "io.github.kprasad99.frontend.name=app1"
      - "io.github.kprasad99.frontend.path=app1"
      - "io.github.kprasad99.frontend.moduleName=App1Module"
      - "io.github.kprasad99.frontend.remoteEntry=/app1/remoteEntry.js"
      - "io.github.kprasad99.frontend.remoteName=app1"
      - "io.github.kprasad99.frontend.exposedModule=/app1/App1Module"
    environment:
      NGINX_ENTRYPOINT_QUIET_LOGS: "1"
    networks:
      - mfe-network
  app2:
    image: kprasad99/app2:1.0.0-alpha.1
    build:
      context: ./app2
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
    # no env to enable h2c, need to manually add nginx.conf with h2c enabled.
    #  - "traefik.http.services.app2.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.app2.loadbalancer.server.port=80"
      - "traefik.http.routers.app2.rule=PathPrefix(`/app2`)"
      - "io.github.kprasad99.frontend.name=app2"
      - "io.github.kprasad99.frontend.path=app2"
      - "io.github.kprasad99.frontend.moduleName=App2Module"
      - "io.github.kprasad99.frontend.remoteEntry=/app2/remoteEntry.js"
      - "io.github.kprasad99.frontend.remoteName=app2"
      - "io.github.kprasad99.frontend.exposedModule=/app2/App2Module"
    environment:
      NGINX_ENTRYPOINT_QUIET_LOGS: "1"
    networks:
      - mfe-network
  myapp:
    image: kprasad99/myapp:1.0.0-alpha.1
    build:
      context: ./myapp
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
    # no env to enable h2c, need to manually add nginx.conf with h2c enabled.
    #  - "traefik.http.services.myapp.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.myapp.loadbalancer.server.port=80"
      - "traefik.http.routers.myapp.rule=PathPrefix(`/myapp`)"
    environment:
      NGINX_ENTRYPOINT_QUIET_LOGS: "1"
    networks:
      - mfe-network
networks:
  mfe-network: